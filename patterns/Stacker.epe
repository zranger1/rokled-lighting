{
  "name": "Stacker",
  "id": "jgwzRXPmfyPz8jYJa",
  "sources": {
    "main": "// colorMode 0: User selected solid color\n// colorMode 1: Animated Rainbow\n// colorMode 2: Color Bands\n\nvar h1 = 0.3333, s1 = 1,v1 = 1;\nvar h2 = 0.9, s2 = 1, v2 = 1;\n\nvar divisions = 2;\nvar count;\nvar center;\nvar pos;\nvar counter;\n\nvar colorMode = 0;\nvar nColorModes = 3;\nvar colorModes = array(nColorModes);\ncolorModes[0] =  (f) => h1;\ncolorModes[1] =  (f) => h1+t1+f/center\ncolorModes[2] =  (f) => .618 * floor(f / size);\n\n\nexport var size = 4;\nvar halfSize = size / 2;\n\nvar frameTime;\nvar msPerFrame = 10\n\nexport function hsvPickerColor1(h,s,v) {\n  h1 = h; s1 = s; v1 = v;\n}\n\nexport function hsvPickerColor2(h,s,v) {\n  h2 = h; s2 = s; v2 = v;\n}\n\nexport function sliderSpeed(v) {\n  msPerFrame = 250 * (1-v);\n}\n\nexport function sliderSize(v) {\n  size = 1+floor(10*v);\n  halfSize = size / 2;\n}\n\nexport function sliderSegments(v) {\n  var n = 1+floor(v*5);\n  if (divisions != n) {\n    divisions = n;\n    initSegments();\n  }\n}\n\nexport function sliderColorMode(v) {\n  colorMode = floor(v * (nColorModes-1))\n}\n\nfunction initSegments() {\n  count = floor(pixelCount / divisions)\n  center = floor(count / 2);  \n  pos = 0;\n  counter = 0;  \n}\n\ninitSegments();\n\nvar t1;\nexport function beforeRender(delta) {\n  frameTime += delta;\n  t1 = time(0.03);\n  \n  if (frameTime >= msPerFrame) {\n    pos++;\n    if (pos > (center-counter)) {\n      counter+=size\n      if (counter >= center) counter = 0;\n      pos = 0;\n    }\n    frameTime = 0\n  }\n}\n\nexport function render(index) {\n  index = index % count;\n  index = center-abs(index-center);\n  \n  if (index > (center - counter)) {\n//    var c = (colorMode) ? t1 + (index/center) : 0;\n    hsv(colorModes[colorMode](index),s1,v1);\n  }\n  else if (abs(index - pos) < halfSize) {\n    hsv(h2,s2,v2);\n  }\n  else {\n    rgb(0,0,0);\n  }\n}"
  },
  "preview": ""
}